// lib/models/country_model.dart

class Country {
  final String name;
  final String code; // ISO country code (e.g., 'IN', 'US')
  final String dialCode; // Phone code (e.g., '+91', '+1')
  final String flag; // Emoji flag

  const Country({
    required this.name,
    required this.code,
    required this.dialCode,
    required this.flag,
  });

  @override
  String toString() {
    return '$flag $dialCode';
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    return other is Country && other.code == code;
  }

  @override
  int get hashCode => code.hashCode;
}

// Popular countries list - you can expand this
class CountryData {
  static const List<Country> countries = [
    Country(name: 'India', code: 'IN', dialCode: '+91', flag: 'ðŸ‡®ðŸ‡³'),
    Country(name: 'United States', code: 'US', dialCode: '+1', flag: 'ðŸ‡ºðŸ‡¸'),
    Country(name: 'United Kingdom', code: 'GB', dialCode: '+44', flag: 'ðŸ‡¬ðŸ‡§'),
    Country(name: 'Canada', code: 'CA', dialCode: '+1', flag: 'ðŸ‡¨ðŸ‡¦'),
    Country(name: 'Australia', code: 'AU', dialCode: '+61', flag: 'ðŸ‡¦ðŸ‡º'),
    Country(name: 'Germany', code: 'DE', dialCode: '+49', flag: 'ðŸ‡©ðŸ‡ª'),
    Country(name: 'France', code: 'FR', dialCode: '+33', flag: 'ðŸ‡«ðŸ‡·'),
    Country(name: 'Japan', code: 'JP', dialCode: '+81', flag: 'ðŸ‡¯ðŸ‡µ'),
    Country(name: 'China', code: 'CN', dialCode: '+86', flag: 'ðŸ‡¨ðŸ‡³'),
    Country(name: 'Brazil', code: 'BR', dialCode: '+55', flag: 'ðŸ‡§ðŸ‡·'),
    Country(name: 'Russia', code: 'RU', dialCode: '+7', flag: 'ðŸ‡·ðŸ‡º'),
    Country(name: 'South Korea', code: 'KR', dialCode: '+82', flag: 'ðŸ‡°ðŸ‡·'),
    Country(name: 'Italy', code: 'IT', dialCode: '+39', flag: 'ðŸ‡®ðŸ‡¹'),
    Country(name: 'Spain', code: 'ES', dialCode: '+34', flag: 'ðŸ‡ªðŸ‡¸'),
    Country(name: 'Mexico', code: 'MX', dialCode: '+52', flag: 'ðŸ‡²ðŸ‡½'),
    Country(name: 'Indonesia', code: 'ID', dialCode: '+62', flag: 'ðŸ‡®ðŸ‡©'),
    Country(name: 'Turkey', code: 'TR', dialCode: '+90', flag: 'ðŸ‡¹ðŸ‡·'),
    Country(name: 'Saudi Arabia', code: 'SA', dialCode: '+966', flag: 'ðŸ‡¸ðŸ‡¦'),
    Country(name: 'South Africa', code: 'ZA', dialCode: '+27', flag: 'ðŸ‡¿ðŸ‡¦'),
    Country(name: 'Nigeria', code: 'NG', dialCode: '+234', flag: 'ðŸ‡³ðŸ‡¬'),
    Country(name: 'Thailand', code: 'TH', dialCode: '+66', flag: 'ðŸ‡¹ðŸ‡­'),
    Country(name: 'Malaysia', code: 'MY', dialCode: '+60', flag: 'ðŸ‡²ðŸ‡¾'),
    Country(name: 'Singapore', code: 'SG', dialCode: '+65', flag: 'ðŸ‡¸ðŸ‡¬'),
    Country(name: 'Philippines', code: 'PH', dialCode: '+63', flag: 'ðŸ‡µðŸ‡­'),
    Country(name: 'Vietnam', code: 'VN', dialCode: '+84', flag: 'ðŸ‡»ðŸ‡³'),
    Country(name: 'Bangladesh', code: 'BD', dialCode: '+880', flag: 'ðŸ‡§ðŸ‡©'),
    Country(name: 'Pakistan', code: 'PK', dialCode: '+92', flag: 'ðŸ‡µðŸ‡°'),
    Country(name: 'Sri Lanka', code: 'LK', dialCode: '+94', flag: 'ðŸ‡±ðŸ‡°'),
    Country(name: 'Nepal', code: 'NP', dialCode: '+977', flag: 'ðŸ‡³ðŸ‡µ'),
    Country(name: 'Myanmar', code: 'MM', dialCode: '+95', flag: 'ðŸ‡²ðŸ‡²'),
    Country(name: 'UAE', code: 'AE', dialCode: '+971', flag: 'ðŸ‡¦ðŸ‡ª'),
    Country(name: 'Egypt', code: 'EG', dialCode: '+20', flag: 'ðŸ‡ªðŸ‡¬'),
    Country(name: 'Kenya', code: 'KE', dialCode: '+254', flag: 'ðŸ‡°ðŸ‡ª'),
    Country(name: 'Ghana', code: 'GH', dialCode: '+233', flag: 'ðŸ‡¬ðŸ‡­'),
    Country(name: 'Ethiopia', code: 'ET', dialCode: '+251', flag: 'ðŸ‡ªðŸ‡¹'),
  ];

  static Country get defaultCountry => countries.first; // India as default

  static Country? findByCode(String code) {
    try {
      return countries.firstWhere((country) => country.code == code);
    } catch (e) {
      return null;
    }
  }

  static Country? findByDialCode(String dialCode) {
    try {
      return countries.firstWhere((country) => country.dialCode == dialCode);
    } catch (e) {
      return null;
    }
  }

  static List<Country> searchCountries(String query) {
    if (query.isEmpty) return countries;
    
    final searchQuery = query.toLowerCase();
    return countries.where((country) {
      return country.name.toLowerCase().contains(searchQuery) ||
             country.dialCode.contains(searchQuery) ||
             country.code.toLowerCase().contains(searchQuery);
    }).toList();
  }
}